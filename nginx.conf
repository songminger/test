user  nginx;
worker_processes  4;
worker_rlimit_nofile 65535;

error_log  /data/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
        use epoll;
        worker_connections 10240;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $request_body '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$upstream_response_time $request_time';

    access_log  /data/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    client_max_body_size 64M;
    client_body_buffer_size 1024k;


    gzip  on;
    gzip_disable "msie6";
    gzip_min_length 1k;
    gzip_comp_level 7;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
    
    proxy_buffer_size 4k;
    proxy_buffers 64 32k;

    include /etc/nginx/conf.d/*.conf;

    upstream tff_pub_admin {
        server 192.168.1.50:4500 max_fails=2 fail_timeout=2 weight=2;
    }

    upstream tff_pub_master {
        server 192.168.1.50:4400 max_fails=2 fail_timeout=2 weight=9;
        server 192.168.1.51:4400 max_fails=2 fail_timeout=2 weight=9;
    }

    upstream tff_pub_1.app {
        server 192.168.1.50:4400 max_fails=2 fail_timeout=2 weight=9;
        server 192.168.1.51:4400 max_fails=2 fail_timeout=2 weight=9;
    }


    server {
                listen 80;
                server_name ~.*; 

                # ip whitelist
                # allow 101.254.182.2;
                # deny all;

                set $check_agent 1;
                if ($args ~ "user.info"){set $check_agent 2$check_agent;}
                if ($http_user_agent !~ ^$){set $check_agent 3$check_agent;}
                if ($check_agent ~ "321"){return 503;}

                proxy_read_timeout 300s;
                proxy_pass_header Server;
                proxy_redirect off;
                
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Scheme $scheme;
                proxy_next_upstream error http_502;

                location /nginx_status {
                      stub_status on;
                      access_log off;
                      allow 101.254.182.2;
                      deny all;
                }
                location /favicon.ico {
                        empty_gif;
                        access_log off;
                }

               location /tff_pub/admin/ {
                        rewrite ^/tff_pub/(.*) /$1 break;
                         proxy_pass http://tff_pub_admin;

                }
                ######################
                ### tff_master
                ##############
                location /tff_pub/ {
                        add_header Content-Type "text/plain;charset=utf-8";

                        set $deny_all 1;
                        # ip white list
                        if ($remote_addr ~ '192.168.1.10') {set $deny_all 3$deny_all;}
                        if ($remote_addr ~ '218.104.231.55') {set $deny_all 3$deny_all;}
                        
                        if ($args ~ "get_user_server_list"){set $deny_all 2$deny_all;}
                        if ($deny_all ~ 21){return 200 '{"status": "error_1024", "user_status": {}, "_client_cache_update": {}, "all_config_version": "", "msg": "服务器将于x月x日正式开启！", "data": {}}';}

                        rewrite ^/tff_pub/(.*) /$1 break;
                        proxy_pass http://tff_pub_master;

                }
                
                #####################
                #####   server_1
                #############
                location ~ /g[1-9]/|/g1[0-1]/ {
                        rewrite ^/[^\/]*/(.*)/ /$1/ break;
                        proxy_pass http://tff_pub_1.app;
                        
                }
                #############
                #####   server_1
                #####################

                #####################
                #####   server_backup
                #############
                location ~ /g[\d-]+/  {
                        rewrite ^/[^\/]*/(.*)/ /$1/ break;
                        proxy_pass http://tff_pub_1.app;
                        
                }
                #############
                #####   server_backup
                #####################

    }

}